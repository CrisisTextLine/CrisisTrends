{"version":3,"sources":["sections/word-cloud.js"],"names":["getQuotes","xhr","XMLHttpRequest","addEventListener","status","quotes","JSON","parse","responseText","open","send","initializeD3","svg","attr","cloudHeight","setSVGWidth","wordCloudDiv","style","display","skipRedraw","cloudWidth","offsetWidth","doViz","words","undefined","lastWords","selectAll","remove","vis","append","max","min","i","c","maxscale","d3","scale","linear","range","domain","sizeScale","layout","cloud","size","rotate","font","fontSize","d","text","w","on","draw","start","bounds","Math","abs","x","y","data","enter","random","document","getElementById","quoteDiv","CLOUD_HEIGHT","select","window","bootstrapWordCloud","issue","this","value","json","error","console","warn","innerHTML"],"mappings":"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","file":"word-cloud.js","sourcesContent":["/* global d3 */\n/* eslint-disable */\n\n(function() {\n  const wordCloudDiv = document.getElementById('wordcloud');\n  const quoteDiv = document.getElementById('wordcloud-quote');\n  const CLOUD_HEIGHT = 500;\n  const svg = d3.select(wordCloudDiv).append('svg');\n\n  let quotes;\n  let cloudWidth;\n  let cloudHeight = CLOUD_HEIGHT;\n  let vis;\n  let lastWords;\n\n  window.bootstrapWordCloud = () => {\n    getQuotes();\n    initializeD3();\n\n    window.addEventListener('resize-complete', setSVGWidth);\n  };\n\n  function getQuotes() {\n    const xhr = new XMLHttpRequest();\n\n    xhr.addEventListener('load', () => {\n      if (xhr.status === 200) {\n        quotes = JSON.parse(xhr.responseText);\n      }\n    });\n\n    xhr.open('GET', 'data/quotes.json');\n    xhr.send();\n  }\n\n  function initializeD3() {\n    svg.attr('height', cloudHeight);\n    setSVGWidth();\n    wordCloudDiv.style.display = 'none';\n  }\n\n  function setSVGWidth(skipRedraw) {\n    cloudWidth = wordCloudDiv.offsetWidth;\n    svg.attr('width', cloudWidth);\n\n    if (skipRedraw !== true) {\n      doViz();\n    }\n  }\n\n  function doViz(words) {\n    if (words === undefined) {\n      if (lastWords === undefined) {\n        return;\n      }\n\n      words = lastWords;\n    } else {\n      lastWords = words;\n    }\n\n    svg.selectAll('g').remove();\n\n    vis = svg\n      .append('g')\n      .attr('transform', 'translate(' +\n        [cloudWidth >> 1, cloudHeight >> 1] +\n        ')');\n\n    let max = 0;\n    let min = 1000000;\n\n    for (let i in words) {\n      if (words[i].c > max) {\n        max = words[i].c;\n      }\n\n      if (words[i].c < min) {\n        min = words[i].c;\n      }\n    }\n\n    const maxscale = d3.scale.linear().range([50, 120]).domain([10, 960])(cloudWidth);\n    const sizeScale = d3.scale.linear().range([12, maxscale]).domain([min, max]);\n\n    d3.layout.cloud()\n      .size([cloudWidth, cloudHeight])\n      .words(words)\n      .rotate(function() {\n        return 0;\n      })\n      .font('Impact')\n      .fontSize(function(d) {\n        return sizeScale(d.c);\n      })\n      .text(function(d) {\n        return d.w;\n      })\n      .on('end', draw)\n      .start();\n  }\n\n  function draw(words, bounds) {\n    const scale = bounds ? Math.min(\n      cloudWidth / Math.abs(bounds[1].x - cloudWidth / 2),\n      cloudWidth / Math.abs(bounds[0].x - cloudWidth / 2),\n      cloudHeight / Math.abs(bounds[1].y - cloudHeight / 2),\n      cloudHeight / Math.abs(bounds[0].y - cloudHeight / 2)) / 2 : 1;\n\n    vis\n      .selectAll('text')\n      .data(words)\n      .enter().append('text')\n        .attr('text-anchor', 'middle')\n        .style('font-size', function(d) {\n          return d.size + 'px';\n        })\n        .style('font-family', 'Impact')\n        .style('fill', function() {\n          return 'rgba(0,0,0,' + (Math.random() * 0.50 + 0.25) + ')';\n        })\n        .attr('text-anchor', 'middle')\n        .attr('transform', function(d) {\n          return 'translate(' + [d.x, d.y] + ')rotate(' + d.rotate + ')';\n        })\n        .text(function(d) {\n          return d.w;\n        })\n    ;\n\n    vis.attr('transform', 'translate(' + [cloudWidth >> 1, cloudHeight >> 1] + ')scale(' + scale + ')');\n  }\n\n  document.getElementById('wordcloud-select').addEventListener('change', function() {\n    const issue = this.value;\n\n    wordCloudDiv.style.display = 'block';\n    setSVGWidth(true);\n\n    d3.json('data/words/' + issue + '.json', function(error, json) {\n      if (error) {\n        return console.warn(error);\n      }\n\n      if (quotes !== undefined) {\n        quoteDiv.innerHTML = '<p>' + quotes[issue] + '</p>';\n      }\n\n      doViz(json);\n    });\n  });\n})();\n"]}