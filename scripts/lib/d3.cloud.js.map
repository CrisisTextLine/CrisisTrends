{"version":3,"sources":["lib/d3.cloud.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","cloud","place","board","tag","bounds","dxdy","dx","dy","startX","x","y","size","startY","maxDelta","Math","sqrt","s","spiral","dt","random","t","min","x0","y0","x1","y1","cloudCollide","collideRects","last","sprite","w","width","sw","lx","sx","msx","h","j","i","text","cloudText","font","cloudFont","fontSize","cloudFontSize","fontStyle","cloudFontNormal","fontWeight","rotate","cloudRotate","padding","cloudPadding","archimedeanSpiral","words","timeInterval","Infinity","event","d3","dispatch","timer","start","step","d","Date","n","data","cloudSprite","hasText","tags","push","word","cloudBounds","stop","end","zeroArray","length","map","call","this","style","weight","sort","a","b","clearInterval","setInterval","arguments","functor","spirals","rebind","value","di","c","clearRect","cw","ratio","ch","maxh","save","measureText","sr","sin","cloudRadians","cr","cos","wcr","wsr","hcr","hsr","max","abs","translate","fillText","lineWidth","strokeText","restore","height","xoff","yoff","pixels","getImageData","w32","seen","seenRow","k","m","slice","b0","b1","e","rectangularSpiral","sign","canvas","PI","document","createElement","getContext","Canvas","archimedean","rectangular","fillStyle","strokeStyle","textAlign","module","exports","layout"],"mappings":"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","file":"d3.cloud.js","sourcesContent":["// Word cloud layout by Jason Davies, http://www.jasondavies.com/word-cloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n(function() {\n  function cloud() {\n    var size = [256, 256],\n        text = cloudText,\n        font = cloudFont,\n        fontSize = cloudFontSize,\n        fontStyle = cloudFontNormal,\n        fontWeight = cloudFontNormal,\n        rotate = cloudRotate,\n        padding = cloudPadding,\n        spiral = archimedeanSpiral,\n        words = [],\n        timeInterval = Infinity,\n        event = d3.dispatch(\"word\", \"end\"),\n        timer = null,\n        cloud = {};\n\n    cloud.start = function() {\n      var board = zeroArray((size[0] >> 5) * size[1]),\n          bounds = null,\n          n = words.length,\n          i = -1,\n          tags = [],\n          data = words.map(function(d, i) {\n            d.text = text.call(this, d, i);\n            d.font = font.call(this, d, i);\n            d.style = fontStyle.call(this, d, i);\n            d.weight = fontWeight.call(this, d, i);\n            d.rotate = rotate.call(this, d, i);\n            d.size = ~~fontSize.call(this, d, i);\n            d.padding = padding.call(this, d, i);\n            return d;\n          }).sort(function(a, b) { return b.size - a.size; });\n\n      if (timer) clearInterval(timer);\n      timer = setInterval(step, 0);\n      step();\n\n      return cloud;\n\n      function step() {\n        var start = +new Date,\n            d;\n        while (+new Date - start < timeInterval && ++i < n && timer) {\n          d = data[i];\n          d.x = (size[0] * (Math.random() + .5)) >> 1;\n          d.y = (size[1] * (Math.random() + .5)) >> 1;\n          cloudSprite(d, data, i);\n          if (d.hasText && place(board, d, bounds)) {\n            tags.push(d);\n            event.word(d);\n            if (bounds) cloudBounds(bounds, d);\n            else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];\n            // Temporary hack\n            d.x -= size[0] >> 1;\n            d.y -= size[1] >> 1;\n          }\n        }\n        if (i >= n) {\n          cloud.stop();\n          event.end(tags, bounds);\n        }\n      }\n    }\n\n    cloud.stop = function() {\n      if (timer) {\n        clearInterval(timer);\n        timer = null;\n      }\n      return cloud;\n    };\n\n    cloud.timeInterval = function(x) {\n      if (!arguments.length) return timeInterval;\n      timeInterval = x == null ? Infinity : x;\n      return cloud;\n    };\n\n    function place(board, tag, bounds) {\n      var perimeter = [{x: 0, y: 0}, {x: size[0], y: size[1]}],\n          startX = tag.x,\n          startY = tag.y,\n          maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n          s = spiral(size),\n          dt = Math.random() < .5 ? 1 : -1,\n          t = -dt,\n          dxdy,\n          dx,\n          dy;\n\n      while (dxdy = s(t += dt)) {\n        dx = ~~dxdy[0];\n        dy = ~~dxdy[1];\n\n        if (Math.min(dx, dy) > maxDelta) break;\n\n        tag.x = startX + dx;\n        tag.y = startY + dy;\n\n        if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\n            tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\n        // TODO only check for collisions within current bounds.\n        if (!bounds || !cloudCollide(tag, board, size[0])) {\n          if (!bounds || collideRects(tag, bounds)) {\n            var sprite = tag.sprite,\n                w = tag.width >> 5,\n                sw = size[0] >> 5,\n                lx = tag.x - (w << 4),\n                sx = lx & 0x7f,\n                msx = 32 - sx,\n                h = tag.y1 - tag.y0,\n                x = (tag.y + tag.y0) * sw + (lx >> 5),\n                last;\n            for (var j = 0; j < h; j++) {\n              last = 0;\n              for (var i = 0; i <= w; i++) {\n                board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n              }\n              x += sw;\n            }\n            delete tag.sprite;\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    cloud.words = function(x) {\n      if (!arguments.length) return words;\n      words = x;\n      return cloud;\n    };\n\n    cloud.size = function(x) {\n      if (!arguments.length) return size;\n      size = [+x[0], +x[1]];\n      return cloud;\n    };\n\n    cloud.font = function(x) {\n      if (!arguments.length) return font;\n      font = d3.functor(x);\n      return cloud;\n    };\n\n    cloud.fontStyle = function(x) {\n      if (!arguments.length) return fontStyle;\n      fontStyle = d3.functor(x);\n      return cloud;\n    };\n\n    cloud.fontWeight = function(x) {\n      if (!arguments.length) return fontWeight;\n      fontWeight = d3.functor(x);\n      return cloud;\n    };\n\n    cloud.rotate = function(x) {\n      if (!arguments.length) return rotate;\n      rotate = d3.functor(x);\n      return cloud;\n    };\n\n    cloud.text = function(x) {\n      if (!arguments.length) return text;\n      text = d3.functor(x);\n      return cloud;\n    };\n\n    cloud.spiral = function(x) {\n      if (!arguments.length) return spiral;\n      spiral = spirals[x + \"\"] || x;\n      return cloud;\n    };\n\n    cloud.fontSize = function(x) {\n      if (!arguments.length) return fontSize;\n      fontSize = d3.functor(x);\n      return cloud;\n    };\n\n    cloud.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = d3.functor(x);\n      return cloud;\n    };\n\n    return d3.rebind(cloud, event, \"on\");\n  }\n\n  function cloudText(d) {\n    return d.text;\n  }\n\n  function cloudFont() {\n    return \"serif\";\n  }\n\n  function cloudFontNormal() {\n    return \"normal\";\n  }\n\n  function cloudFontSize(d) {\n    return Math.sqrt(d.value);\n  }\n\n  function cloudRotate() {\n    return (~~(Math.random() * 6) - 3) * 30;\n  }\n\n  function cloudPadding() {\n    return 1;\n  }\n\n  // Fetches a monochrome sprite bitmap for the specified text.\n  // Load in batches for speed.\n  function cloudSprite(d, data, di) {\n    if (d.sprite) return;\n    c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n    var x = 0,\n        y = 0,\n        maxh = 0,\n        n = data.length;\n    --di;\n    while (++di < n) {\n      d = data[di];\n      c.save();\n      c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\n      var w = c.measureText(d.text + \"m\").width * ratio,\n          h = d.size << 1;\n      if (d.rotate) {\n        var sr = Math.sin(d.rotate * cloudRadians),\n            cr = Math.cos(d.rotate * cloudRadians),\n            wcr = w * cr,\n            wsr = w * sr,\n            hcr = h * cr,\n            hsr = h * sr;\n        w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\n        h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n      } else {\n        w = (w + 0x1f) >> 5 << 5;\n      }\n      if (h > maxh) maxh = h;\n      if (x + w >= (cw << 5)) {\n        x = 0;\n        y += maxh;\n        maxh = 0;\n      }\n      if (y + h >= ch) break;\n      c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n      if (d.rotate) c.rotate(d.rotate * cloudRadians);\n      c.fillText(d.text, 0, 0);\n      if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);\n      c.restore();\n      d.width = w;\n      d.height = h;\n      d.xoff = x;\n      d.yoff = y;\n      d.x1 = w >> 1;\n      d.y1 = h >> 1;\n      d.x0 = -d.x1;\n      d.y0 = -d.y1;\n      d.hasText = true;\n      x += w;\n    }\n    var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n        sprite = [];\n    while (--di >= 0) {\n      d = data[di];\n      if (!d.hasText) continue;\n      var w = d.width,\n          w32 = w >> 5,\n          h = d.y1 - d.y0;\n      // Zero the buffer\n      for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n      x = d.xoff;\n      if (x == null) return;\n      y = d.yoff;\n      var seen = 0,\n          seenRow = -1;\n      for (var j = 0; j < h; j++) {\n        for (var i = 0; i < w; i++) {\n          var k = w32 * j + (i >> 5),\n              m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n          sprite[k] |= m;\n          seen |= m;\n        }\n        if (seen) seenRow = j;\n        else {\n          d.y0++;\n          h--;\n          j--;\n          y++;\n        }\n      }\n      d.y1 = d.y0 + seenRow;\n      d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n    }\n  }\n\n  // Use mask-based collision detection.\n  function cloudCollide(tag, board, sw) {\n    sw >>= 5;\n    var sprite = tag.sprite,\n        w = tag.width >> 5,\n        lx = tag.x - (w << 4),\n        sx = lx & 0x7f,\n        msx = 32 - sx,\n        h = tag.y1 - tag.y0,\n        x = (tag.y + tag.y0) * sw + (lx >> 5),\n        last;\n    for (var j = 0; j < h; j++) {\n      last = 0;\n      for (var i = 0; i <= w; i++) {\n        if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\n            & board[x + i]) return true;\n      }\n      x += sw;\n    }\n    return false;\n  }\n\n  function cloudBounds(bounds, d) {\n    var b0 = bounds[0],\n        b1 = bounds[1];\n    if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n    if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n    if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n    if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n  }\n\n  function collideRects(a, b) {\n    return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n  }\n\n  function archimedeanSpiral(size) {\n    var e = size[0] / size[1];\n    return function(t) {\n      return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n    };\n  }\n\n  function rectangularSpiral(size) {\n    var dy = 4,\n        dx = dy * size[0] / size[1],\n        x = 0,\n        y = 0;\n    return function(t) {\n      var sign = t < 0 ? -1 : 1;\n      // See triangular numbers: T_n = n * (n + 1) / 2.\n      switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n        case 0:  x += dx; break;\n        case 1:  y += dy; break;\n        case 2:  x -= dx; break;\n        default: y -= dy; break;\n      }\n      return [x, y];\n    };\n  }\n\n  // TODO reuse arrays?\n  function zeroArray(n) {\n    var a = [],\n        i = -1;\n    while (++i < n) a[i] = 0;\n    return a;\n  }\n\n  var cloudRadians = Math.PI / 180,\n      cw = 1 << 11 >> 5,\n      ch = 1 << 11,\n      canvas,\n      ratio = 1;\n\n  if (typeof document !== \"undefined\") {\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    ratio = Math.sqrt(canvas.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n  } else {\n    // Attempt to use node-canvas.\n    canvas = new Canvas(cw << 5, ch);\n  }\n\n  var c = canvas.getContext(\"2d\"),\n      spirals = {\n        archimedean: archimedeanSpiral,\n        rectangular: rectangularSpiral\n      };\n  c.fillStyle = c.strokeStyle = \"red\";\n  c.textAlign = \"center\";\n\n  if (typeof module === \"object\" && module.exports) module.exports = cloud;\n  else (d3.layout || (d3.layout = {})).cloud = cloud;\n})();"]}